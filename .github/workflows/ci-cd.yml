name: MLOps CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
    # Checkout repo
    - name: Checkout repo
      uses: actions/checkout@v3

    # Cache pip dependencies
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Install DVC and Docker dependencies for workflow
    - name: Install Python dependencies for workflow
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --no-cache-dir --prefer-binary dvc[s3] docker boto3==1.34.69

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Pull model from S3 using DVC (optional)
    - name: Pull model from S3 via DVC
      run: |
        dvc pull -r s3remote || echo "Skipping DVC pull"

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build Docker image with cache
    - name: Build Docker image (optimized)
      run: |
        docker build \
          --pull \
          --cache-from ${{ secrets.DOCKER_USERNAME }}/plant-disease-detector:latest \
          -t ${{ secrets.DOCKER_USERNAME }}/plant-disease-detector:latest .

    # Push Docker image to Docker Hub
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/plant-disease-detector:latest
