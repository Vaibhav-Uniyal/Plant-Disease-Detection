name: MLOps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
    # Checkout repo
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Log in to Docker Hub FIRST
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: docker.io

    # Set up Docker Buildx AFTER authentication
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Cache pip dependencies
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Install DVC and Docker dependencies for workflow
    - name: Install workflow dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --no-cache-dir --prefer-binary \
          "dvc[s3]==3.51.0" \
          "docker==6.1.3" \
          "boto3==1.34.69"

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Pull model from S3 using DVC (REQUIRED)
    - name: Pull model from S3 via DVC
      run: |
        echo "Pulling model from S3..."
        dvc pull plant_disease_model.h5.dvc
        ls -lh plant_disease_model.h5
        echo "âœ… Model pulled successfully"

    # Build and push Docker image (now authenticated)
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/plant-disease-detector:latest
          ${{ secrets.DOCKER_USERNAME }}/plant-disease-detector:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
